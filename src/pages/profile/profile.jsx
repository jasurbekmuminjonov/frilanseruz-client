import React, { useEffect, useState } from "react";
import "../edit/edit.css";
import "./profile.css";
import { useNavigate, useParams } from "react-router-dom";
import {
  useGetByUsernameQuery,
  useGetUserQuery,
} from "../../context/services/user.service";
import { IoIosInformationCircleOutline } from "react-icons/io";
import { CiGlobe, CiUser } from "react-icons/ci";
import ReactMarkdown from "react-markdown";
import {
  FaDribbble,
  FaFacebook,
  FaGithub,
  FaInstagram,
  FaLinkedin,
  FaRegHourglass,
  FaTwitter,
  FaVk,
  FaYoutube,
} from "react-icons/fa6";
import logo from "/logo.png";
import { FaTelegramPlane } from "react-icons/fa";
import { IoEye, IoGlobeOutline } from "react-icons/io5";
import Cookies from "js-cookie";
import { MdEdit } from "react-icons/md";
import { Modal } from "antd";
const Profile = () => {
  const { id } = useParams();
  const token = Cookies.get("access_token");
  const { data: userData = {} } = useGetByUsernameQuery(id);
  const { data: userNameUser = {} } = token ? useGetUserQuery() : { data: {} };
  const [isOwner, setIsOwner] = useState(false);
  const navigate = useNavigate();
  const [modalContent, setModalContent] = useState({});
  const [showModal, setShowModal] = useState(false);
  useEffect(() => {
    if (userData?.username === userNameUser.username) {
      setIsOwner(true);
    }
  }, [userData, userNameUser]);

  const countryData = [
    { name: "–†–æ—Å—Å–∏—è", flag: "üá∑üá∫", id: "ru" },
    { name: "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", flag: "üá∫üáø", id: "uz" },
    { name: "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", flag: "üá∞üáø", id: "kz" },
  ];

  const jobData = [
    { value: "mobile_dev", label: "–ú–æ–±–∏–ª—å–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" },
    { value: "frontend_dev", label: "–§—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" },
    { value: "backend_dev", label: "–ë—ç–∫—ç–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" },
    { value: "fullstack_dev", label: "–§—É–ª–ª—Å—Ç–µ–∫-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" },
    { value: "game_dev", label: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä" },
    { value: "devops_dev", label: "DevOps-–∏–Ω–∂–µ–Ω–µ—Ä" },
    { value: "data_dev", label: "–ò–Ω–∂–µ–Ω–µ—Ä –¥–∞–Ω–Ω—ã—Ö" },
    { value: "iiml_dev", label: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ò–ò/–ú–û" },
    { value: "blockchain_dev", label: "–ë–ª–æ–∫—á–µ–π–Ω-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" },
    { value: "embedded_dev", label: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º" },
    { value: "security_dev", label: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" },
    { value: "arvr_dev", label: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ AR/VR" },
    { value: "graphic_design", label: "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "uxui_design", label: "UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "web_design", label: "–í–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "mobile_design", label: "–î–∏–∑–∞–π–Ω–µ—Ä –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π" },
    { value: "game_design", label: "–ì–µ–π–º–¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "interior_design", label: "–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤" },
    { value: "motion_design", label: "–ú–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "brand_design", label: "–ë—Ä–µ–Ω–¥-–¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "3d_design", label: "3D –¥–∏–∑–∞–π–Ω–µ—Ä" },
    { value: "fashion_design", label: "–ú–æ–¥–µ–ª—å–µ—Ä" },
    { value: "illustration_design", label: "–î–∏–∑–∞–π–Ω–µ—Ä –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π" },
    { value: "content_writer", label: "–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–∏—Å–∞—Ç–µ–ª—å" },
    { value: "seo_writer", label: "SEO-—Å–æ–∑–¥–∞—Ç–µ–ª—å" },
    { value: "copy_writer", label: "–ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä" },
    { value: "video_content_writer", label: "–°—Ü–µ–Ω–∞—Ä–∏—Å—Ç –≤–∏–¥–µ–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞" },
    {
      value: "graphic_content_writer",
      label: "–°—Ü–µ–Ω–∞—Ä–∏—Å—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
    },
    { value: "photo_video_writer", label: "–§–æ—Ç–æ–≥—Ä–∞—Ñ/–í–∏–¥–µ–æ–æ–ø–µ—Ä–∞—Ç–æ—Ä" },
    { value: "social_writer", label: "–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π" },
    { value: "report_writer", label: "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç" },
    { value: "frontend_tester", label: "–§—Ä–æ–Ω—Ç–µ–Ω–¥-—Ç–µ—Å—Ç–µ—Ä" },
    { value: "backend_tester", label: "–ë—ç–∫—ç–Ω–¥-—Ç–µ—Å—Ç–µ—Ä" },
    { value: "performance_tester", label: "–¢–µ—Å—Ç–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏" },
    { value: "security_tester", label: "–¢–µ—Å—Ç–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" },
    { value: "qa_tester", label: "–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞" },
    { value: "game_tester", label: "–¢–µ—Å—Ç–µ—Ä –∏–≥—Ä" },
  ];
  const levels = {
    junior: "Junior",
    middle: "Middle",
    senior: "Senior",
    lead: "Lead",
  };
  const socialIcons = {
    github: <FaGithub />,
    linkedin: <FaLinkedin />,
    facebook: <FaFacebook />,
    twitter: <FaTwitter />,
    instagram: <FaInstagram />,
    youtube: <FaYoutube />,
    telegram: <FaTelegramPlane />,
    vk: <FaVk />,
    website: <IoGlobeOutline />,
    dribbble: <FaDribbble />,
  };
  return (
    <div className="profile">
      <Modal
        open={showModal}
        onCancel={() => setShowModal(false)}
        onClose={() => setShowModal(false)}
        footer={[]}
        style={{ display: "flex", flexDirection: "column", gap: "6px" }}
      >
        <p style={{ fontSize: "25px", fontWeight: "500" }}>
          {modalContent.title}
        </p>
        <span>{modalContent.description}</span>
        <img
          style={{ width: "100%", border: "1px solid #ccc" }}
          src={modalContent.image}
          alt=""
        />
        <a target="_blank" href={modalContent.link}>
          –°—Å—ã–ª–∫a
        </a>
      </Modal>
      <div className="profile_data">
        <div className="logo">
          <img src={logo} alt="logo" />
          <a href="https://frilanser.uz">frilanser.uz</a>
        </div>
        <div className="profile_image">
          <img src={userData?.profile_photo} alt="profile" />
        </div>
        <p>{userData?.fullname} </p>
        {isOwner && (
          <button onClick={() => navigate("/edit")}>
            <MdEdit />
            –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
          </button>
        )}
        <div className="user_info">
          <p>
            <IoIosInformationCircleOutline />
            {levels[userData.experience_level]}{" "}
            {userData.job_type !== "other"
              ? jobData?.find((item) => item?.value === userData?.job)?.label
              : userData?.job}
          </p>
          <p>
            <CiGlobe />
            {countryData?.find((item) => item?.id === userData?.country)?.name}
          </p>
          <p>
            <CiUser />
            {`${userData.age} –ª–µ—Ç`}
          </p>
          <p>
            <FaRegHourglass />
            {`–û–ø—ã—Ç ${userData.experience_years} –≥–æ–¥`}
          </p>
        </div>
        <div className="socials">
          {userData?.social_media?.map((item) => (
            <a key={item._id} target="_blank" href={item.link}>
              {socialIcons[item.platform]}
            </a>
          ))}
        </div>
        <div className="skills">
          {userData?.skills?.map((item, index) => (
            <span key={index}>{item}</span>
          ))}
        </div>
        <div className="about">
          <p>–û–±–æ –º–Ω–µ</p>
          {/* <span style={{ whiteSpace: "pre-line" }}>{userData?.about}</span> */}
          <span>
            <ReactMarkdown children={userData?.about} />
          </span>
          <p>{userData.email}</p>
        </div>
      </div>
      <div className="portfolio_body">
        {userData?.portfolio?.length < 1 ? (
          <div className="add_more">
            <p>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø—É—Å—Ç–æ</p>
          </div>
        ) : (
          userData?.portfolio?.map((item) => (
            <div
              className="portfolio_card"
              style={{ backgroundImage: `url(${item.image})` }}
              key={item._id}
            >
              <div className="card_actions">
                <p>{item.title}</p>
                <div className="action_buttons">
                  <button
                    onClick={() => {
                      setModalContent(item);
                      setShowModal(true);
                    }}
                  >
                    <IoEye />
                  </button>
                </div>
              </div>
            </div>
          ))
        )}
      </div>
    </div>
  );
};

export default Profile;
